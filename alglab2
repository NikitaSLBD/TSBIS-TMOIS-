Белорусский государственный университет информатики и радиоэлектроники
 
 
 
 
  
 
 
      Отчет по лабораторной работе № 2
 
         Выполнение всех операций над множествами
 
 
 
 
 
 
 
 


 
Работу выполнили:
Лукашевич А. Д. , Слобода Н.С.,  Тагиева П.К.
Группа 221703
Проверила:
Гулякина Н.А. 
Постановка задачи:
Даны 2 множества, выполнить все операции над ними: объединение, пересечение, разность, симметрическая разность, декартово произведение, дополнение.
Оба множества задаются методом перечисления пользователем, либо при помощи высказывания
Уточнение постановки задачи:
Оба множества задаются только одним из двух перечисленных способов.
За один запуск  программа выполняет только одну из операций, выбранную пользователем.
Универсальное множество - все натуральные числа лежащие в отрезке [1 ; 100].
Мощность обоих множеств задается пользователем с клавиатуры и лежит в пределах m ϵ [1;11].
Элементы обоих множеств - натуральные числа, лежащие в отрезке [1 ; 100].
Элементы обоих множеств задаются пользователем с клавиатуры.
Для задания множеств высказыванием воспользуемся высказываниями.
1 {x ϵ N | x = 3n+1, n=1, m1}, где  m1 - мощность множества А.
1 {у ϵ N | у = 2k+3, k=1, m2}, где  m2 - мощность множества В.
Определения:
Множество – любое собрание определенных и различимых объектов, мыслимое нами как единое целое.
Пустое множество – множество, не содержащее ни одного элемента.
Мощность множества – количество элементов множества.
Объединение множеств А и В – множество, которому принадлежат все элементы исходных множеств и обозначаемое А∪В.
{x | x ϵ A V x ϵ B}
Пересечение множеств - множество обозначаемое А∩В и состоящее из элементов, принадлежащих каждому из множеств А и В.
{x | x ϵ A & x ϵ B}
 Разность множеств А и В - множество обозначаемое А\В и состоящее из элементов, которые принадлежат множеству A, но не принадлежащих B.
{х | х ϵ А & х ∉ B}
 Разность множеств В и А - множество обозначаемое В\А и состоящее из элементов, которые принадлежат множеству В, но не принадлежащих А.
{х | х ϵ В & х ∉ А}
 Симметрическая разность множеств -  множество, обозначаемое  A∆B состоящее из элементов, которые принадлежат только лишь множеству A или только лишь множеству B.
A∆B = {(А\В) ∪(В\А)} 
Декартово произведение множеств А и В -множество, состоящее из тех и только тех пар, т.е. кортежей длиной 2, первая компонента которых принадлежит множеству А, а вторая - множеству В, обозначаемое как А×В.
< x1, x2 > ∈ A × B → x1 ∈ A & x2 ∈ B.
Декартово произведение множеств В и А - множество, состоящее из тех и только тех пар, т.е. кортежей длиной 2, первая компонента которых принадлежит множеству В, а  вторая - множеству А, обозначаемое как В×А.
< x1, x2 > ∈ В × А → x1 ∈ В & x2 ∈ А.
Множество A’ называется дополнением множества A до некоторого универсального множества U, если оно состоит из элементов, принадлежащих множеству U и не принадлежащих множеству A.
x ∈ A’ = U\A → x ∈ U & x /∈ A.
Множество В’ называется дополнением множества В до некоторого универсального множества U, если оно состоит из элементов, принадлежащих множеству U и не принадлежащих множеству В.
x ∈ В’ = U\В → x ∈ U & x /∈ В
Универсум U (универсальное множество) называется множество содержащее все объекты и все множества.
Кортеж - конечный упорядоченный список элементов.












Описание алгоритма:
        	1.   Ввод данных
1.1. Если пользователь хочет, чтобы множества были заданы перечислением, то он вводит цифру 1, если высказынием, то 2.
1.2. Пользователь  вводит мощность множества А.
1.3. Если пользователь выбрал способ задания перечислением,  пользователь вводит элементы множества А.
1.4.Если пользователь выбрал способ задания высказыванием, то множество А заполняется в соответствии с ним.
   1.4.1 n=1.
   1.4.2. Вычисляем элемент множества согласно высказыванию х = 3n+1. 
   1.4.3. Если n = m1, то переходим к пункту 1.5.
   1.4.4. Увеличиваем n на единицу.
1.5. Пользователь вводит мощность множества В.
1.6.Если пользователь выбрал способ задания высказыванием, то множество В заполняется в соответствии с ним.
   1.6.1 k = 1.
   1.6.2. Вычисляем элемент множества согласно высказыванию y = 2k+3. 
   1.6.3. Если k = m2, то переходим к пункту 1.7.
   1.6.4. Увеличиваем k на единицу.
1.7. Если пользователь выбрал способ задания перечислением, пользователь вводит элементы множества В.
   2.   Выбор операции
2.1. Пользователь выбирает какую из следующих операций он хочет выполнить и в зависимости от его  выбора выполняется одна из следующих операций:
 1. При вводе цифры 1 выполняется операция объединения.
 2. При вводе цифры 2 выполняется операция пересечения.
 3. При вводе цифры 3 выполняется операция разности.
      3.1. Пользователь выбирает порядок разности: если вводится цифра 1 - то выполняется  операция А\В, если цифра 2 - то В\А.
 4. При вводе цифры 4 выполняется операция симметрической разности.
 5. При вводе цифры 5 выполняется операция декартова произведения.
    5.1 Пользователь выбирает порядок декартова произведения: если вводится цифра 1 - то выполняется  операция А× В, если цифра 2 - то В ×А.
6. При вводе цифры 6 выполняется операция дополнения.
    6.1 Пользователь выбирает множество, над которым выполнится операция: если вводится цифра 1 - то выполняется операция над А, если цифра 2 - то над В.
2.2. Если пользователь ввел 1 переходим к пункту 3.
2.3. Если пользователь ввел 2 переходим к пункту 4.
2.4. Если пользователь ввел 3  и 1 переходим к пункту 5.
2.5. Если пользователь ввел 3 и 2 переходим к пункту 6.
2.6. Если пользователь ввел 4 переходим к пункту 7.
2.7. Если пользователь ввел 5 и 1 переходим к пункту 8.
2.8. Если пользователь ввел 5 и 2 переходим к пункту 9.
2.9. Если пользователь ввел 6 и 1 переходим к пункту 10.
2.10. Если пользователь ввел 6 и 2 переходим к пункту 11.
	   3.   Операция объединения
3.1. Создается пустое множество С, которое станет результатом выполнения операции.
3.2. В пустое множество С копируются все соответствующие элементы множества А.
3.3. i – номер текущего элемента множества В, i = 1.
3.4. j – номер текущего элемента множества А,  j = 1.
3.5.  Если i-тый элемент множества В не равен j-тому элементу множества А переходим к пункту 3.7.
3.6.  Если i-тый элемент множества В  равен j-тому элементу множества А:
   3.6.1. Увеличиваем i на единицу.
   3.6.2. Переходим к пункту 3.5.
3.7. Если элемент с номером j не является последним:
   3.7.1. Увеличиваем j на единицу.
   3.7.2. Переходим к пункту 3.5.
3.8.  Если j-тый элемент является последним, то:
   3.8.1. Заносим i-тый элемент множества В в множество С.
   3.8.2 Если i-тый элемент множества В является последним, то переходим к пункту 3.9.
   3.8.3. Увеличиваем i на единицу.
   3.8.4. Переходим к пункту 3.4.
3.9.  Множество С есть результат объединения множеств А и B.
   3.9.1. Элементы множества С выводятся на экран.
   3.9.2. Программа завершает работу.
               4.   Операция пересечения
4.1. Создается пустое множество С, которое станет результатом выполнения операции.
4.2. i – номер текущего элемента множества В,  i = 1.
4.3. j – номер текущего элемента множества А,  j = 1.
4.4.   Если j-тый элемент множества А равен i-тому элементу множества В, то i-тый элемент множества B помещается во множество С.
4.5.  Если i-тый элемент множества B является последним, то переходим к пункту 4.8.
4.6.  Выбираем следующий элемент множества В:
   4.6.1. Увеличиваем i на единицу.
   4.6.2. Возвращаемся к пункту 4.4.
4.7.  Если j-тый элемент множества А является последним, то переходим к пункту 4.9.
4.8. Выбираем следующий элемент множества А:
   4.8.1. Увеличиваем j на единицу.
   4.8.2. Переходим к пункту 4.4.
4.9.  Множество С есть результат пересечения множеств А и B.
   4.9.1. Элементы множества С выводятся на экран.
   4.9.2. Программа завершает работу. 
              5. Операция разности А\В
5.1.  Создается пустое множество С, которое станет результатом выполнения операции.
5.2. i – номер текущего элемента множества В,  i = 1.
5.3. j – номер текущего элемента множества А,  j = 1.
5.4.  Если j-тый элемент множества А равен i-тому элементу множества В:
   5.4.1. Если j-тый элемент множества A не является последним,то переходим к пункту 5.7.
   5.4.2  Если j-тый элемент множества A является последним, то переходим к пункту 5.9.
5.5. Если j-тый элемент множества А не равен i-тому элементу множества В:
   5.5.1. Если i-тый элемент множества В не является последним,то переходим к пункту 5.6.
   5.5.2  Если i-тый элемент множества В является последним, то переходим к пункту 5.8.
5.6. Выбираем следующий элемент множества В:
   5.6.1. Увеличиваем i на единицу.
   5.6.2. Переходим к пункту 5.4.
5.7. Выбираем следующий элемент множества А без занесения в С:
   5.7.1. Если j-тый элемент множества А является последним, то переходим к пункту 5.9.
   5.7.2. Увеличиваем j на единицу.
   5.7.3. Переходим к пункту 5.4.
5.8. Выбираем следующий элемент множества А с занесением в С:
   5.8.1.  j-тый элемент множества А помещается во множество С.
   5.8.2. Если j-тый элемент множества А является последним, то переходим к пункту 5.9.
   5.8.3. Увеличиваем j на единицу.
   5.8.4. Переходим к пункту 5.4.
5.9. Множество С есть результат разности множеств А и В
   5.9.1. Элементы множества С выводятся на экран.
   5.9.2. Программа завершает работу.
          6. Операция разности В\А
6.1. Создается пустое множество С, которое станет результатом выполнения операции.
6.2. i – номер текущего элемента множества В,  i = 1.
6.3. j – номер текущего элемента множества А,  j = 1.
6.4.  Если i-тый элемент множества B равен j-тому элементу множества A:
   6.4.1. Если i-тый элемент множества B не является последним,то переходим к пункту 6.7.
   6.4.2  Если i-тый элемент множества B является последним, то переходим к пункту 6.9.
6.5. Если i-тый элемент множества B не равен j-тому элементу множества A:
   6.5.1. Если j-тый элемент множества A не является последним,то переходим к пункту 6.6.
   6.5.2  Если j-тый элемент множества A является последним, то переходим к пункту 6.8.
6.6. Выбираем следующий элемент множества A:
   6.6.1. Увеличиваем j на единицу.
   6.6.2. Переходим к пункту 6.4.
6.7. Выбираем следующий элемент множества B без занесения в С:
   6.7.1. Если i-тый элемент множества B является последним, то переходим к пункту 6.9.
   6.7.2. Увеличиваем i на единицу.
   6.7.3. Переходим к пункту 6.4.
6.8. Выбираем следующий элемент множества B с занесением в С:
   6.8.1.  i-тый элемент множества B помещается во множество С.
   6.8.2. Если i-тый элемент множества B является последним, то переходим к пункту 6.9.
   6.8.3. Увеличиваем i на единицу.
   6.8.4. Переходим к пункту 6.4.
6.9. Множество С есть результат разности множеств B и A
   6.9.1. Элементы множества С выводятся на экран.
   6.9.2. Программа завершает работу.
         7. Симметрическая разность.
7.1. Создается пустое множество С, которое станет результатом выполнения операции.
7.2. i – номер текущего элемента множества В,  i = 1.
7.3. j – номер текущего элемента множества А,  j = 1.
7.4.  Если j-тый элемент множества А равен i-тому элементу множества В:
   7.4.1. Если j-тый элемент множества A не является последним,то переходим к пункту 7.7.
   7.4.2  Если j-тый элемент множества A является последним, то переходим к пункту 7.9.
7.5. Если j-тый элемент множества А не равен i-тому элементу множества В:
   7.5.1. Если i-тый элемент множества В не является последним,то переходим к пункту 7.6.
   7.5.2  Если i-тый элемент множества В является последним, то переходим к пункту 7.8.
7.6. Выбираем следующий элемент множества В:
   7.6.1. Увеличиваем i на единицу.
   7.6.2. Переходим к пункту 7.4.
7.7. Выбираем следующий элемент множества А без занесения в С:
   7.7.1. Если j-тый элемент множества А является последним, то переходим к пункту 7.9.
   7.7.2. Увеличиваем j на единицу.
   7.7.3. Переходим к пункту 7.4.
7.8. Выбираем следующий элемент множества А с занесением в С:
   7.8.1.  j-тый элемент множества А помещается во множество С.
   7.8.2. Если j-тый элемент множества А является последним, то переходим к пункту 7.9.
   7.8.3. Увеличиваем j на единицу.
   7.8.4. Переходим к пункту 7.4.
7.9.  Если i-тый элемент множества B равен j-тому элементу множества A:
   7.9.1. Если i-тый элемент множества B не является последним,то переходим к пункту 7.12.
   7.9.2  Если i-тый элемент множества B является последним, то переходим к пункту 7.14.
7.10. Если i-тый элемент множества B не равен j-тому элементу множества A:
   7.10.1. Если j-тый элемент множества A не является последним,то переходим к пункту 7.11.
   7.10.2  Если j-тый элемент множества A является последним, то переходим к пункту 7.13.
7.11. Выбираем следующий элемент множества A:
   7.11.1. Увеличиваем j на единицу.
   7.11.2. Переходим к пункту 7.9.
7.12. Выбираем следующий элемент множества B без занесения в С:
   7.12.1. Если i-тый элемент множества B является последним, то переходим к пункту 7.14.
   7.12.2. Увеличиваем i на единицу.
   7.12.3. Переходим к пункту 7.9.
7.13. Выбираем следующий элемент множества B с занесением в С:
   7.13.1.  i-тый элемент множества B помещается во множество С.
   7.13.2. Если i-тый элемент множества B является последним, то переходим к пункту 7.14.
   7.13.3. Увеличиваем i на единицу.
   7.13.4. Переходим к пункту 7.9.
7.14. Множество С есть результат разности множеств B и A
   7.14.1. Элементы множества С выводятся на экран.
   7.14.2. Программа завершает работу.
      8. Декартово произведение А и В.
8.1. Создается пустое множество С, которое станет результатом выполнения операции.
8.2. i – номер текущего элемента множества В,  i = 1.
8.3. j – номер текущего элемента множества А,  j = 1.
8.4.  Создаем кортеж из j-того элемента множества A и i-того элемента множества B.
8.5. Полученный кортеж помещается во множество С.
8.6. Если i-тый элемент множества В являлся последним переходим к пункту 8.8.
8.7. Выбираем следующий элемент множества В:
   8.7.1. Увеличиваем i на единицу.
   8.7.2. Переходим к пункту 8.4.
8.8. Если j-тый элемент множества А был последним переходим на пункт 8.10.
8.9. Выбираем следующий элемент множества А:
  8.9.1. Увеличиваем j на единицу. 
  8.9.2. Переходим к пункту 8.4.
8.10. Множество С есть результат декартова произведения множеств А и В.
  8.10.1. Элементы множества С выводятся на экран.
  8.10.2. Программа завершает работу.
     9. Декартово произведение В и А.
9.1. Создается пустое множество С, которое станет результатом выполнения операции.
9.2. i – номер текущего элемента множества В,  i = 1.
9.3. j – номер текущего элемента множества А,  j = 1.
9.4.  Создаем кортеж из i-того элемента множества B и j-того элемента множества A.
9.5. Полученный кортеж помещается во множество С.
9.6. Если j-тый элемент множества A являлся последним переходим к пункту 9.8.
9.7. Выбираем следующий элемент множества A:
   9.7.1. Увеличиваем j на единицу.
   9.7.2. Переходим к пункту 9.4.
9.8. Если i-тый элемент множества B был последним переходим на пункт 9.10.
9.9. Выбираем следующий элемент множества B:
  9.9.1. Увеличиваем i на единицу. 
  9.9.2. Переходим к пункту 9.4.
9.10. Множество С есть результат декартова произведения множеств B и A.
  9.10.1. Элементы множества С выводятся на экран.
  9.10.2. Программа завершает работу.
    10. Дополнение множества А.
10.1. Создается пустое множество С, которое станет результатом выполнения операции.
10.2. p – номер текущего элемента универсального множества U,  p = 1.
10.3. j – номер текущего элемента множества А,  j = 1.
10.4.  Если p-тый элемент множества U равен j-тому элементу множества A:
  10.4.1. Если i-тый элемент множества U не является последним,то переходим к пункту 10.7.
  10.4.2  Если i-тый элемент множества U является последним, то переходим к пункту 10.9.
10.5. Если p-тый элемент множества U не равен j-тому элементу множества A:
  10.5.1. Если j-тый элемент множества A не является последним,то переходим к пункту 10.6.
  10.5.2  Если j-тый элемент множества A является последним, то переходим к пункту 10.8.
10.6. Выбираем следующий элемент множества A:
  10.6.1. Увеличиваем j на единицу.
  10.6.2. Переходим к пункту 10.4.
10.7. Выбираем следующий элемент множества U без занесения в С:
  10.7.1. Если p-тый элемент множества U является последним, то переходим к пункту 10.9.
  10.7.2. Увеличиваем p на единицу.
  10.7.3. Переходим к пункту 10.4.
10.8. Выбираем следующий элемент множества U с занесением в С:
  10.8.1.  p-тый элемент множества U помещается во множество С.
  10.8.2. Если p-тый элемент множества U является последним, то переходим к пункту 10.9.
  10.8.3. Увеличиваем p на единицу.
  10.8.4. Переходим к пункту 10.4.
10.9. Множество С есть результат выполнения операции дополнения над множеством A
  10.9.1. Элементы множества С выводятся на экран.
  10.9.2. Программа завершает работу.
   11. Дополнение множества В.
11.1.  Создается пустое множество С, которое станет результатом выполнения операции.
11.2  p – номер текущего элемента универсального множества U,  p = 1.
11.3. i – номер текущего элемента множества B,  i = 1.
11.4.  Если p-тый элемент множества U равен i-тому элементу множества В:
  11.4.1. Если p-тый элемент множества U не является последним,то переходим к пункту 11.7.
  11.4.2  Если p-тый элемент множества U является последним, то переходим к пункту 11.9.
11.5. Если p-тый элемент множества U не равен i-тому элементу множества В:
  11.5.1. Если i-тый элемент множества В не является последним,то переходим к пункту 11.6.
  11.5.2  Если i-тый элемент множества В является последним, то переходим к пункту 11.8.
11.6. Выбираем следующий элемент множества В:
  11.6.1. Увеличиваем i на единицу.
  11.6.2. Переходим к пункту 11.4.
11.7. Выбираем следующий элемент множества U без занесения в С:
  11.7.1. Если p-тый элемент множества U является последним, то переходим к пункту 11.9.
  11.7.2. Увеличиваем p на единицу.
  11.7.3. Переходим к пункту 11.4.
11.8. Выбираем следующий элемент множества U с занесением в С:
  11.8.1.  p-тый элемент множества U помещается во множество С.
  11.8.2. Если p-тый элемент множества U является последним, то переходим к пункту 11.9.
  11.8.3. Увеличиваем p на единицу.
  11.8.4. Переходим к пункту 11.4.
11.9. Множество С есть результат выполнения операции дополнение над множеством В.
  11.9.1. Элементы множества С выводятся на экран.
  11.9.2. Программа завершает работу.
